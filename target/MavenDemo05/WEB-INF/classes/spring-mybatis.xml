<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.2.xsd
       http://www.springframework.org/schema/util
       https://www.springframework.org/schema/util/spring-util.xsd
       http://www.alibaba.com/schema/stat
       http://www.alibaba.com/schema/stat.xsd
       http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 自动加载属性配置文件 -->
    <context:property-placeholder location="classpath:db.properties"></context:property-placeholder>

    <!-- 阿里 druid 数据库连接池 -->
<!-- <bean id="dataSource"-->
<!-- class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close" >
        <!-- 数据库基本信息配置 -->
        <!--数据库基本信息配置-->
        <property name="connectionErrorRetryAttempts" value="3"></property>
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="filters" value="stat"/>
        <!-- 最大并发连接数 -->
        <property name="maxActive" value="10"/>
        <!-- 初始化连接数量 -->
        <property name="initialSize" value="5"/>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="10000"/>
        <!-- 最小空闲连接数 -->
        <property name="minIdle" value="5"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="keepAlive" value="true"/>
    </bean>

    <!-- mybatis的SqlSession的工厂:dataSource:引用数据源,typeAliasesPackage 实体类所在的包 -->
    <bean id="sqlSessionFactory"
          class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation"
                  value="classpath:SqlMapConfig.xml"></property>
        <property name="dataSource" ref="dataSource"></property>
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
    </bean>

    <!-- 配置事务管理器 -->
<!--    <bean id="transactionManager"-->
<!--          class="org.springframework.jdbc.datasource.DataSourceTransactionManager"-->
<!--          p:dataSource-ref="dataSource"/>-->
<!--    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>-->

    <!--配置声明式事务-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--    结合AOP实现事务的织入-->
    <!--    &lt;!&ndash;配置事务通知; ->-->

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <!--给那些方法配置事务-->
    <!--配置事务的传播特性: new propagation= -->
    <tx:attributes>
<!--        <tx:method name="add" propagation= "REQUIRED"/>-->
<!--        <tx:method name="delete" propagation= "REQUIRED"/>-->
<!--        <tx:method name="update" propagation= "REQUIRED"/>-->
<!--        <tx:method name="query" read-only="true" />-->
        <tx:method name="*" propagation="REQUIRED"/>
    </tx:attributes>
    </tx:advice>
    <!--配置事务切入-->
    <aop:config>
        <aop:pointcut id="txPointCut" expression="execution(* com.weiwei.service.Impl.*.*(..))"/>
        <aop:advisor advice-ref= "txAdvice" pointcut-ref= "txPointCut"/>
    </aop:config>

    <!--MyBatis-Spring自动创建代理，直接注入数据映射器接口到你的 service， 当使用映射器时,你仅仅如调 用你的 DAO接口
        不用自己写实现接口的代码。 basePackage:指定sql映射文件/接口所在的包（自动扫描） -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage"
                  value="com.weiwei.mapper"></property>
    </bean>

</beans>